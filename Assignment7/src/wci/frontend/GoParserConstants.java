/* Generated By:JJTree&JavaCC: Do not edit this line. GoParserConstants.java */
package wci.frontend;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GoParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IGNORE = 1;
  /** RegularExpression Id. */
  int SEMICOLON = 22;
  /** RegularExpression Id. */
  int RESERVED_WORD = 23;
  /** RegularExpression Id. */
  int INTEGER_NUMBER = 24;
  /** RegularExpression Id. */
  int REAL_NUMBER = 25;
  /** RegularExpression Id. */
  int RAW_STRING = 26;
  /** RegularExpression Id. */
  int INTERPRETED_STRING = 27;
  /** RegularExpression Id. */
  int NEWLINE = 28;
  /** RegularExpression Id. */
  int ESCAPED_CHAR = 29;
  /** RegularExpression Id. */
  int WHITE_SPACE = 30;
  /** RegularExpression Id. */
  int IDENTIFIER = 31;
  /** RegularExpression Id. */
  int IDENTIFIER_LIST = 32;
  /** RegularExpression Id. */
  int LETTER = 33;
  /** RegularExpression Id. */
  int DIGIT = 34;
  /** RegularExpression Id. */
  int ALPHANUMERIC = 35;
  /** RegularExpression Id. */
  int ADD_OP = 36;
  /** RegularExpression Id. */
  int MUL_OP = 37;
  /** RegularExpression Id. */
  int REL_OP = 38;
  /** RegularExpression Id. */
  int UNARY_OP = 39;
  /** RegularExpression Id. */
  int ASSIGN_OP = 40;
  /** RegularExpression Id. */
  int BINARY_OP = 41;
  /** RegularExpression Id. */
  int COMMON_LITERAL_SYMBOL = 42;
  /** RegularExpression Id. */
  int RAW_LITERAL_SYMBOL = 43;
  /** RegularExpression Id. */
  int INTERPRETED_LITERAL_SYMBOL = 44;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int MULTI_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<IGNORE>",
    "<token of kind 2>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 5>",
    "\"{\"",
    "\"}\"",
    "\"if\"",
    "\"else\"",
    "\"switch\"",
    "\"case\"",
    "\":\"",
    "\"default\"",
    "\"=\"",
    "\":=\"",
    "\"++\"",
    "\"--\"",
    "\"for\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "<RESERVED_WORD>",
    "<INTEGER_NUMBER>",
    "<REAL_NUMBER>",
    "<RAW_STRING>",
    "<INTERPRETED_STRING>",
    "<NEWLINE>",
    "<ESCAPED_CHAR>",
    "<WHITE_SPACE>",
    "<IDENTIFIER>",
    "<IDENTIFIER_LIST>",
    "<LETTER>",
    "<DIGIT>",
    "<ALPHANUMERIC>",
    "<ADD_OP>",
    "<MUL_OP>",
    "<REL_OP>",
    "<UNARY_OP>",
    "<ASSIGN_OP>",
    "<BINARY_OP>",
    "<COMMON_LITERAL_SYMBOL>",
    "<RAW_LITERAL_SYMBOL>",
    "<INTERPRETED_LITERAL_SYMBOL>",
  };

}
